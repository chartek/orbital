<div class="page-header">
    <h1>
        @ViewBag.Machine.Name
        <small>@ViewBag.Machine.Description</small>
    </h1>
</div>

<div class="row">
    <!-- ko foreach: categories -->
    <div class="span4">
        <h2 data-bind="text: name"></h2>
        <div class="well">
            <!-- ko foreach: charts -->
            <div data-bind="attr: { id: id }"></div>
            <!-- /ko -->
        </div>
    </div>
    <!-- /ko -->
</div>

<p>
    <a href="#myModal" class="btn btn-large btn-primary" data-toggle="modal">Create Graph</a>
</p>

<div id="myModal" class="modal hide fade">
    <div class="modal-header">
        <a class="close" data-dismiss="modal">×</a>
        <h3>Create Graph</h3>
    </div>
    <div class="modal-body">
        <form class="form-horizontal" data-bind="with: createChartModel">
            <div class="control-group">
                <label class="control-label">MachineName</label>
                <div class="controls">
                    <select class="input-xlarge" data-bind='options: machines, optionsCaption: "Select...", value: machineName'>
                    </select>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">ObjectName</label>
                <div class="controls">
                    <select class="input-xlarge" data-bind='options: objects, optionsCaption: "Select...", value: objectName'>
                    </select>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">CounterName</label>
                <div class="controls">
                    <select class="input-xlarge" data-bind='options: counters, optionsText: "counterName", optionsCaption: "Select...", value: counter'>
                    </select>
                </div>
            </div>
            <hr />
            <div class="control-group">
                <label class="control-label">Name</label>
                <div class="controls">
                    <input type="text">
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">Category</label>
                <div class="controls">
                    <input type="text">
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">Y-Axis Label</label>
                <div class="controls">
                    <input type="text">
                </div>
            </div>
        </form>        
    </div>
    <div class="modal-footer">
        <a href="#" class="btn btn-primary">Create</a>
    </div>
</div>

@section footer {
    <script type="text/javascript">
        function viewModel() {
            var self = this;

            self.name = "@ViewBag.Machine.Name";
            self.description = "@ViewBag.Machine.Description";

            self.categories = [
            @foreach (var cat in ViewBag.Categories) {
                <text>{
                    name: "@cat.Name",
                    charts: [
                    @foreach (var chart in cat.Charts) {
                        <text>{
                            id: "@chart.Id",
                            yaxisLabel: "@chart.YAxisLabel",
                            series: [
                            @foreach (var series in chart.Series) {
                                <text>{
                                    name: "@series.Name",
                                    data: [
                                    @foreach (var item in series.Data) {
                                        <text>[Date.UTC(@item.Date.Year, @item.Date.Month, @item.Date.Day, @item.Date.Hour, @item.Date.Minute, @item.Date.Second), @item.Value],</text>
                                    }
                                    ]
                                },</text>
                            }
                            ]
                        },</text>
                    }
                    ]
                },</text>
            }
            ];

            self.createChartModel = new function () {
                name = ko.observable();
                category = ko.observable();
                yaxisLabel = ko.observable();
                machineName = ko.observable();
                objectName = ko.observable();
                counter = ko.observable();
                details = [
                @foreach (var detail in ViewBag.CounterDetails) {
                    @:{ 
                        @:id: @detail.CounterID,
                        @:machineName: "@detail.MachineName", 
                        @:objectName: "@detail.ObjectName", 
                        @:counterName: "@detail.CounterName@if (!string.IsNullOrEmpty(detail.InstanceName)) { <text>(@detail.InstanceName)</text>}"
                    @:},
                }
                ];
                // contains the list of distinct machineNames
                machines = ko.computed(function() {
                    var names = new Array();

                    for (var i = 0; i < details.length; i++) {
                        if (names.indexOf(details[i].machineName) < 0)
                            names.push(details[i].machineName);
                    }

                    return names;
                });
                // contains the objectNames for the selected machineName
                objects = ko.computed(function() {
                    if (machineName() == null)
                        return null;

                    var names = new Array();
                    for (var i = 0; i < details.length; i++) {
                        if (details[i].machineName == machineName() && names.indexOf(details[i].objectName) < 0)
                            names.push(details[i].objectName);
                    }

                    return names;
                });
                // contains the counters for the selected machineName and objectName
                counters = ko.computed(function() {
                    if (machineName() == null || objectName() == null)
                        return null;

                    return ko.utils.arrayFilter(details, function(item) {
                        return item.machineName == machineName() && item.objectName == objectName();
                    });
                });
            };
        };

        var model = new viewModel(); 
        ko.applyBindings(model);

        $(function() {
            for (var i = 0; i < model.categories.length; i++) {
                for (var j = 0; j < model.categories[i].charts.length; j++) {
                    var test = new Highcharts.Chart({
                        chart: {
                            renderTo: model.categories[i].charts[j].id,
                            type: 'spline',
                            zoomType: 'x',
                            height: 250
                        },
                        credits: { enabled: false },
			            title: { text: null },
                        legend: { enabled: false },
                        xAxis: { type: 'datetime' },
                        yAxis: {
				            title: { text: model.categories[i].charts[j].yaxisLabel },
				            min: 0
			            },
                        plotOptions: { spline: { marker: { enabled: false } } },
                        series: model.categories[i].charts[j].series
                    });
                }
            }
        });
    </script>
}